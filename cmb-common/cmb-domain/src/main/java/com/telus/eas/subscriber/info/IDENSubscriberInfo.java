/* Generated by Together */

package com.telus.eas.subscriber.info;

import java.util.Date;

import com.telus.api.InvalidChangeMemberIdException;
import com.telus.api.TelusAPIException;
import com.telus.api.account.AvailablePhoneNumber;
import com.telus.api.account.Contract;
import com.telus.api.account.DispatchResourceContractMismatchException;
import com.telus.api.account.EquipmentChangeRequest;
import com.telus.api.account.IDENSubscriber;
import com.telus.api.account.InvalidEquipmentChangeException;
import com.telus.api.account.InvalidFleetException;
import com.telus.api.account.MemberIdMatchException;
import com.telus.api.account.PhoneNumberException;
import com.telus.api.account.PhoneNumberInUseException;
import com.telus.api.account.PhoneNumberReservation;
import com.telus.api.account.SerialNumberInUseException;
import com.telus.api.account.UnknownSubscriberException;
import com.telus.api.equipment.IDENEquipment;
import com.telus.api.equipment.MuleEquipment;
import com.telus.api.fleet.Fleet;
import com.telus.api.fleet.MemberIdentity;
import com.telus.api.fleet.ReservePortInMemberIdentity;
import com.telus.api.fleet.TalkGroup;
import com.telus.api.portability.PRMSystemException;
import com.telus.api.portability.PortInEligibility;
import com.telus.api.portability.PortRequestException;
import com.telus.api.servicerequest.ServiceRequestHeader;
import com.telus.eas.account.info.FleetIdentityInfo;
import com.telus.eas.account.info.MemberIdentityInfo;
import com.telus.eas.account.info.TalkGroupInfo;

@Deprecated
public class IDENSubscriberInfo extends SubscriberInfo implements IDENSubscriber {
	static final long serialVersionUID = 1L;

	private String subscriberAlias;
	private FleetIdentityInfo fleetIdentity = new FleetIdentityInfo();  // TODO: unused, remove
	private String     IPAddress;
	private String     IMSI;
	private String     fleetClass;
	private MemberIdentityInfo memberIdentity = new MemberIdentityInfo();
	private TalkGroupInfo[] talkGroups;

	public IDENSubscriberInfo() {}

	public void clear() {
		super.clear();
		subscriberAlias = null;
		fleetIdentity.clear();
		IPAddress = null;
		IMSI = null;
		fleetClass = null;
		memberIdentity.clear();
	}

	public Object clone() {
		IDENSubscriberInfo o = (IDENSubscriberInfo)super.clone();
		o.fleetIdentity  = (FleetIdentityInfo)clone(fleetIdentity);
		o.memberIdentity = (MemberIdentityInfo)clone(memberIdentity);
		return o;
	}

	public void reserveMemberId(Fleet fleet, String memberIdPatttern) throws UnknownSubscriberException,
	MemberIdMatchException, TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void reservePTNBasedMemberId () throws UnknownSubscriberException, TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}
	public void reserveMemberId(Fleet fleet) throws UnknownSubscriberException, TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public MemberIdentity getMemberIdentity() {
		return memberIdentity;
	}

	public MemberIdentityInfo getMemberIdentity0() {
		return memberIdentity;
	}

	public void reserveIPAddress() throws UnknownSubscriberException, TelusAPIException {
	}

	public String getIPAddress() {
		return IPAddress;
	}

	public void setIPAddress(String IPAddress) {
		this.IPAddress = IPAddress;
	}

	public String getIMSI() {
		return IMSI;
	}

	public void setIMSI(String IMSI) {
		this.IMSI = IMSI;
	}

	public String getFleetClass() {
		return fleetClass;
	}

	public void setFleetClass(String fleetClass) {
		this.fleetClass = fleetClass;
	}

	public Fleet getFleet() throws UnknownSubscriberException, TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void setTalkGroups(TalkGroup[] talkGroup) throws UnknownSubscriberException, InvalidFleetException, TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void addAndRemoveTalkGroups(TalkGroup[] talkGroupsToAdd, TalkGroup[] talkGroupsToRemove) throws UnknownSubscriberException, InvalidFleetException, TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public TalkGroup[] getTalkGroups() throws UnknownSubscriberException, TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void setTalkGroups0(TalkGroupInfo[] talkGroup) {
		talkGroups = talkGroup;
	}

	public TalkGroupInfo[] getTalkGroups0() {
		return talkGroups;
	}

	public void setSubscriberAlias(String subscriberAlias) {
		this.subscriberAlias = subscriberAlias;
	}

	public String getSubscriberAlias() {
		return subscriberAlias;
	}

	public boolean contains(TalkGroup talkGroup) throws UnknownSubscriberException, TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public boolean isIDEN() {
		return true;
	}

	public boolean isPCS() {
		return false;
	}

	public boolean isPager() {
		return false;
	}

	public boolean isPTNBasedFleet() throws TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void addMemberIdentity(int newUrbanId, int newFleetId, String newMemberId, String dealerCode, String salesRepCode, Contract contract) throws MemberIdMatchException, DispatchResourceContractMismatchException, InvalidFleetException, TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void removeMemberIdentity(String dealerCode, String salesRepCode, Contract contract) throws DispatchResourceContractMismatchException, TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void changeMemberId(String newMemberId) throws MemberIdMatchException, InvalidChangeMemberIdException, TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void changeMemberIdentity(int newUrbanId, int newFleetId, String newMemberId) throws MemberIdMatchException, InvalidChangeMemberIdException, TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void changeIPAddress() throws TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	/**
	 * @see IDENSubscriber#changeIMSI()
	 */
	public void changeIMSI() throws TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public String[] retrieveAvailableMemberIds(String memberIdPattern, int maxMemberIds) throws TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public String[] retrieveAvailableMemberIds(int urbanId, int fleetId, String memberIdPattern, int maxMemberIds) throws TelusAPIException{
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public FleetIdentityInfo getFleetIdentity() {
		return memberIdentity.getFleetIdentity0();
	}

	public ReservePortInMemberIdentity getReservePortInMemberIdentity() throws TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void reserveIDENResourcesForPortIn(PhoneNumberReservation phoneNumberReservation, boolean reserveUfmi, boolean ptnBased, ReservePortInMemberIdentity memberIdentity, String dealerCode) throws TelusAPIException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void changeEquipmentToVirtual(String dealerCode, String salesRepCode, String requestorId) throws TelusAPIException, InvalidEquipmentChangeException {
		throw new java.lang.UnsupportedOperationException("Method not implemented.");
	}

	public void copyFrom(SubscriberInfo o) {
		super.copyFrom(o);

		if(o instanceof IDENSubscriberInfo) {
			IDENSubscriberInfo o2 = (IDENSubscriberInfo)o;

			subscriberAlias = o2.subscriberAlias;
			IPAddress = o2.IPAddress;
			IMSI = o2.IMSI;
			fleetClass = o2.fleetClass;
			memberIdentity.copyFrom(o2.memberIdentity);
		}
	}

	public boolean isPortRestricted(String accountPortProtectionIndicator, String subscriberPortProtectionIndicator) throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");

	}

	public String getPortProtectionIndicator()  throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");

	}

	public void updatePortRestriction(boolean restrictPort) throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");

	}

	public void changeFaxNumber() throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public void changeFaxNumber(AvailablePhoneNumber availableFaxNumber) throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public String toString() {
		StringBuffer s = new StringBuffer(128);
		s.append("IDENSubscriberInfo:[\n");
		s.append("    subscriberAlias=[").append(subscriberAlias).append("]\n");
		s.append("    IPAddress=[").append(IPAddress).append("]\n");
		s.append("    IMSI=[").append(IMSI).append("]\n");
		s.append("    fleetClass=[").append(fleetClass).append("]\n");
		s.append("    memberIdentity=[").append(memberIdentity).append("]\n");
		s.append(super.toString()).append("]\n");
		s.append("]");

		return s.toString();
	}

	public void changePhoneNumber(AvailablePhoneNumber availablePhoneNumber,
			String reasonCode, boolean changeOtherNumbers, String dealerCode,
			String salesRepCode, PortInEligibility portInEligibility,
			ServiceRequestHeader header) throws PhoneNumberException,
			PhoneNumberInUseException, PortRequestException,
			PRMSystemException, TelusAPIException {
		 throw new UnsupportedOperationException("Method not implemented here");
		
	}

	public void restore(Date activityDate, String reason, String memoText,
			String portOption, PortInEligibility portInEligibility,
			ServiceRequestHeader header) throws PortRequestException,
			PRMSystemException, TelusAPIException {
		 throw new UnsupportedOperationException("Method not implemented here");
	}

	public EquipmentChangeRequest newEquipmentChangeRequest(
			IDENEquipment newIDENEquipment, String dealerCode,
			String salesRepCode, String requestorId, String repairId,
			String swapType, MuleEquipment associatedMuleEquipment,
			char allowDuplicateSerialNo) throws TelusAPIException,
			SerialNumberInUseException, InvalidEquipmentChangeException {
		 throw new UnsupportedOperationException("Method not implemented here");
	}

}