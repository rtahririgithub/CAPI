/* Generated by Together */

package com.telus.eas.subscriber.info;

import com.telus.api.InvalidMigrationRequestException;
import com.telus.api.TelusAPIException;
import com.telus.api.message.ApplicationMessage;
import com.telus.api.portability.PRMSystemException;
import com.telus.api.portability.PortInEligibility;
import com.telus.api.portability.PortRequestException;
import com.telus.api.servicerequest.ServiceRequestHeader;
import com.telus.api.account.*;
import com.telus.api.equipment.Equipment;

import java.util.*;

public class PCSSubscriberInfo extends SubscriberInfo implements PCSSubscriber {
	
	static final long serialVersionUID = 1L;

	public PCSSubscriberInfo() { }

	private String previousPhoneNumber;
	private Date previousPhoneNumberChangeDate;
	private Date nextPhoneNumberChangeDate;
	private String nextPhoneNumber;
	private boolean fido;

	public boolean isIDEN() {
		return false;
	}

	public boolean isPCS() {
		return true;
	}

	@Deprecated
	public boolean isPager() {
		return false;
	}

	public String toString() {

		StringBuffer s = new StringBuffer(128);
		s.append("PCSSubscriberInfo:[\n");
		s.append(super.toString()).append("]\n");
		s.append("]");

		return s.toString();
	}

	public void setPreviousPhoneNumber(String previousPhoneNumber) {
		this.previousPhoneNumber = previousPhoneNumber;
	}
	
	public String getPreviousPhoneNumber() {
		return previousPhoneNumber;
	}
	
	public void setPreviousPhoneNumberChangeDate(Date previousPhoneNumberChangeDate) {
		this.previousPhoneNumberChangeDate = previousPhoneNumberChangeDate;
	}
	
	public Date getPreviousPhoneNumberChangeDate() {
		return previousPhoneNumberChangeDate;
	}
	
	public void setNextPhoneNumberChangeDate(Date nextPhoneNumberChangeDate) {
		this.nextPhoneNumberChangeDate = nextPhoneNumberChangeDate;
	}
	
	public Date getNextPhoneNumberChangeDate() {
		return nextPhoneNumberChangeDate;
	}
	
	public void setNextPhoneNumber(String nextPhoneNumber) {
		this.nextPhoneNumber = nextPhoneNumber;
	}
	
	public String getNextPhoneNumber() {
		return nextPhoneNumber;
	}

	@Deprecated
	public boolean isFidoConversion() {
		return fido;
	}

	public String getMIN() {
		throw new UnsupportedOperationException("Method not implemented here.");
	}

	public Equipment[] getSecondaryEquipments() throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here.");
	}

	public ApplicationMessage[] changeEquipment(Equipment newEquipment, Equipment[] newSecondaryEquipments, String dealerCode, String salesRepCode, String requestorId, String repairId,
			String swapType, boolean preserveDigitalServices, boolean ignoreSerialNoInUse) 
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException {
		throw new UnsupportedOperationException("Method not implemented here.");
	}

	public ApplicationMessage[] changeEquipment(Equipment newEquipment, Equipment associatedHandset, String dealerCode,	String salesRepCode, String requestorId, String repairId, 
			String swapType, boolean preserveDigitalServices, char allowDuplicateSerialNo, ServiceRequestHeader header) 
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException, UnsupportedEquipmentException {
		// TODO Implement method
		return null;
	}

	public ApplicationMessage[] testChangeEquipment(Equipment newEquipment, Equipment newAssociatedHandset, String dealerCode, String salesRepCode, String requestorId, String repairId, 
			String swapType, char allowDuplicateSerialNo)
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException, UnsupportedEquipmentException {
		// TODO Implement method
		return null;
	}

	public MigrationRequest newMigrationRequest(Account account, Equipment newEquipment, Equipment newAssociatedHandset, String pricePlanCode) 
			throws InvalidEquipmentChangeException, UnsupportedEquipmentException, TelusAPIException {
		// TODO Implement method
		return null;
	}

	public EquipmentChangeRequest newEquipmentChangeRequest(Equipment newEquipment, Equipment newAssociatedHandset, String dealerCode, String salesRepCode, String requestorId, 
			String repairId, String swapType, boolean preserveDigitalServices)
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException, UnsupportedEquipmentException {
		// TODO Implement method
		return null;
	}

	public void changeEquipmentToVirtual(Equipment[] newSecondaryEquipments, String dealerCode, String salesRepCode, String requestorId)
			throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException {
		throw new UnsupportedOperationException("Method not implemented here.");
	}

	public EquipmentChangeRequest newEquipmentChangeRequest(Equipment newEquipment, Equipment[] newSecondaryEquipments, String dealerCode, String salesRepCode, String requestorId, String repairId,
			String swapType, boolean preserveDigitalServices) 
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException {
		throw new UnsupportedOperationException("Method not implemented here.");
	}

	public ApplicationMessage[] testChangeEquipment(Equipment newEquipment, Equipment[] newSecondaryEquipments, String dealerCode, String salesRepCode, String requestorId, String repairId, 
			String swapType, boolean ignoreSerialNoInUse) 
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException {
		throw new UnsupportedOperationException("Method not implemented here.");
	}

	@Deprecated
	public void setFidoConversion(boolean isFidoConversion) {
		fido = isFidoConversion;
	}
	
	public void changePhoneNumber(AvailablePhoneNumber availablePhoneNumber, String reasonCode,	boolean changeOtherNumbers) throws TelusAPIException, PhoneNumberException, PhoneNumberInUseException {
		throw new java.lang.UnsupportedOperationException("Method not implemented in server class.");	
	}

	public ApplicationMessage[] changeEquipment(Equipment newEquipment, Equipment[] newSecondaryEquipments, String dealerCode, String salesRepCode, String requestorId, String repairId, 
			String swapType, boolean preserveDigitalServices, char allowDuplicateSerialNo) 
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException {
		throw new UnsupportedOperationException("Method not implemented here.");
	}

	public ApplicationMessage[] testChangeEquipment(Equipment newEquipment, Equipment[] newSecondaryEquipments, String dealerCode, String salesRepCode, String requestorId, String repairId, 
			String swapType, char allowDuplidateSerialNo) 
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException {
		throw new UnsupportedOperationException("Method not implemented here.");
	}
	
	public boolean isPortRestricted(String accountPortProtectionIndicator, String subscriberPortProtectionIndicator) throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public String getPortProtectionIndicator()  throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}
	
	public void updatePortRestriction(boolean restrictPort) throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public ApplicationMessage[] changeEquipment(Equipment newEquipment,	Equipment[] newSecondaryEquipments, String dealerCode, String salesRepCode, String requestorId, String repairId,
			String swapType, boolean preserveDigitalServices, char allowDuplicateSerialNo, ServiceRequestHeader header)
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public void changePhoneNumber(AvailablePhoneNumber availablePhoneNumber, String reasonCode, boolean changeOtherNumbers, String dealerCode, String salesRepCode, PortInEligibility portInEligibility,
			ServiceRequestHeader header) 
					throws PhoneNumberException, PhoneNumberInUseException, PortRequestException, PRMSystemException, TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public void restore(Date activityDate, String reason, String memoText, String portOption, PortInEligibility portInEligibility, ServiceRequestHeader header)
			throws PortRequestException, PRMSystemException, TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public EquipmentChangeRequest newEquipmentChangeRequest(Equipment newEquipment, Equipment[] newSecondaryEquipments, String dealerCode, String salesRepCode, String requestorId, 
			String repairId, String swapType, boolean preserveDigitalServices, char allowDuplicateSerialNo) 
					throws TelusAPIException, SerialNumberInUseException, InvalidEquipmentChangeException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public void reserveOnHoldPhoneNumber(PhoneNumberReservation phoneNumberReservation) throws TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public void testMigrate(MigrateSeatRequest migrateSeatRequest, String dealerCode, String salesRepCode, String requestorId) throws InvalidMigrationRequestException, TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public MigrateSeatRequest newMigrationRequest(Account newAccount, String pricePlanCode) throws InvalidMigrationRequestException, TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public MigrateSeatRequest newMigrationRequest(Account newAccount, String pricePlanCode, String targetSeatTypeCode, String targetSeatGroupId) 
			throws InvalidMigrationRequestException, TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

	public Subscriber migrate(MigrateSeatRequest migrateSeatRequest, String dealerCode, String salesRepCode, String requestorId) throws InvalidMigrationRequestException, TelusAPIException {
		throw new UnsupportedOperationException("Method not implemented here");
	}

}