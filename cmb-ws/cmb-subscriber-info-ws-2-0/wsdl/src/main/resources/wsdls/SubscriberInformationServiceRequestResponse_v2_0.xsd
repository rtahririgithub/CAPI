<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2008 rel. 2 sp1 (http://www.altova.com) by TELUS COMMUNICATIONS (TELUS COMMUNICATIONS) -->
<xsd:schema xmlns:tns="http://xmlschema.tmi.telus.com/srv/CMO/InformationMgmt/SubscriberInformationServiceRequestResponse_v2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:common="http://xmlschema.tmi.telus.com/xsd/Customer/Customer/CustomerManagementCommonTypes_v4" xmlns:sit="http://xmlschema.tmi.telus.com/xsd/Customer/BaseTypes/SubscriberInformationTypes_v2" targetNamespace="http://xmlschema.tmi.telus.com/srv/CMO/InformationMgmt/SubscriberInformationServiceRequestResponse_v2" elementFormDefault="qualified">
	<xsd:import namespace="http://xmlschema.tmi.telus.com/xsd/Customer/Customer/CustomerManagementCommonTypes_v4" schemaLocation="http://xmlschema.tmi.telus.com/xsd/Customer/Customer/CustomerManagementCommonTypes_v4_0.xsd"/>
	<xsd:import namespace="http://xmlschema.tmi.telus.com/xsd/Customer/BaseTypes/SubscriberInformationTypes_v2" schemaLocation="http://xmlschema.tmi.telus.com/xsd/Customer/BaseTypes/SubscriberInformationTypes_v2_0.xsd"/>
	<xsd:element name="getSubscriberIdentifierListByPhoneNumberAndAccountNumber">
		<xsd:annotation>
			<xsd:documentation>This operation returns a list of subscriber identifiers, KB subscriber number/ID and CRDB Subscription ID/External ID, queried by phone number and BAN</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="billingAccountNumber" type="common:AccountNumber"/>
				<xsd:element name="phoneNumber" type="common:PhoneNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberIdentifierListByPhoneNumberAndAccountNumberResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriberIdentifierList" type="sit:SubscriberIdentifierList"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createMemo">
		<xsd:annotation>
			<xsd:documentation> This operation creates a subscriber level memo.  The operation requires BAN, KB Subscriber Number and Product Type in addition to the memo text.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="billingAccountNumber" type="common:AccountNumber"/>
				<xsd:element name="subscriberMemo" type="sit:SubscriberMemo"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createMemoResponse">
		<xsd:complexType>
			<xsd:sequence/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberListByAccountNumber">
		<xsd:annotation>
			<xsd:documentation>This operation returns a list of subscribers, active and cancelled, queried by account number</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="billingAccountNumber" type="common:AccountNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberListByAccountNumberResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriber" type="sit:Subscriber" minOccurs="0" maxOccurs="1000"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberListByIMSI">
		<xsd:annotation>
			<xsd:documentation>This operation returns a list of subscribers, active and cancelled, queried by equipment IMSI</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="IMSI" type="common:IMSIType"/>
				<xsd:element name="includeCancelledSubscribersInd" type="xsd:boolean" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberListByIMSIResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriber" type="sit:Subscriber" minOccurs="0" maxOccurs="1000"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberListByPhoneNumber">
		<xsd:annotation>
			<xsd:documentation>This operation returns a list of subscribers, active and cancelled, queried by phone number</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="phoneNumber" type="common:PhoneNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberListByPhoneNumberResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriber" type="sit:Subscriber" minOccurs="0" maxOccurs="1000"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberByPhoneNumber">
		<xsd:annotation>
			<xsd:documentation> This operation returns a single subscriber, either active or suspended, queried by phone number.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="phoneNumber" type="common:PhoneNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberByPhoneNumberResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriber" type="sit:Subscriber" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="updatePortInSubscriber">
		<xsd:annotation>
			<xsd:documentation>This operation updates the Subscriber entity to indicate that the “port-type” of this subscriber is a “port-in”</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="phoneNumber" type="common:PhoneNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="updatePortInSubscriberResponse">
		<xsd:annotation>
			<xsd:documentation>Empty response indicates successful response</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="updateSnapbackPhoneNumber">
		<xsd:annotation>
			<xsd:documentation>Returns the phone number resource back into the Telus pool of numbers when the number is no longer being used after a port-out</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="phoneNumber" type="common:PhoneNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="updateSnapbackPhoneNumberResponse">
		<xsd:annotation>
			<xsd:documentation>Empty response indicates successful response</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="checkPortOutEligibility">
		<xsd:annotation>
			<xsd:documentation>Check to see if a phoneNumber is eligible for port out and if it is “transferable blocked”</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="phoneNumber" type="common:PhoneNumber"/>
				<xsd:element name="NDPDirectionIndicator" type="sit:NDPDirectionIndicator"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="checkPortOutEligibilityResponse">
		<xsd:annotation>
			<xsd:documentation>Booleans indicating if phoneNumber is eligible for port out or transferable blocked</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="portOutEligibility" type="sit:PortOutEligibilityInfo"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="updateEmailAddress">
		<xsd:annotation>
			<xsd:documentation>This operation will update the subscriber level email.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="billingAccountNumber" type="common:AccountNumber"/>
				<xsd:element name="subscriberNumber" type="common:SubscriberNumber"/>
				<xsd:element name="emailAddress" type="xsd:string"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="updateEmailAddressResponse">
		<xsd:annotation>
			<xsd:documentation>Empty response indicates successful response.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getEmailAddress">
		<xsd:annotation>
			<xsd:documentation>This operation will return the subscriber level email</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="billingAccountNumber" type="common:AccountNumber"/>
				<xsd:element name="subscriberNumber" type="common:SubscriberNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getEmailAddressResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="emailAddress" type="xsd:string"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getCallingCircleInformation">
		<xsd:annotation>
			<xsd:documentation>This operation will return the calling circle numbers.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="billingAccountNumber" type="common:AccountNumber"/>
				<xsd:element name="subscriberNumber" type="common:SubscriberNumber"/>
				<xsd:element name="productType" type="common:ProductType"/>
				<xsd:element name="serviceCode" type="common:ServiceCode"/>
				<xsd:element name="featureCode" type="common:FeatureCode"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getCallingCircleInformationResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="callingCircleInfo" type="sit:CallingCircleInfo" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberListByDataSharingGroupList">
		<xsd:annotation>
			<xsd:documentation>This operation returns a list of subscribers representing only active or suspended subscribers (Subscriber.status == SubscriberStatus.A || Subscriber.status == SubscriberStatus.S) on an account where the subscriber has a SOC that belongs in the given data sharing group codes</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="billingAccountNumber" type="common:AccountNumber"/>
				<xsd:element name="dataSharingGroupCodeList" type="xsd:string" maxOccurs="1000"/>
				<xsd:element name="effectiveDate" type="xsd:date" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Date when subscribers have active priceplan/service in the given data sharing group.  If null or not supplied, will use logical date.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberListByDataSharingGroupListResponse">
		<xsd:annotation>
			<xsd:documentation>Returns SubscribersByDataSharingGroup object types giving the data sharing group reference data, a list of subscribers and whether they are contributing</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriberListByDataSharingGroupList" type="sit:SubscriberListByDataSharingGroup" minOccurs="0" maxOccurs="1000"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberIdListByServiceGroupFamily">
		<xsd:annotation>
			<xsd:documentation>This operation returns all subscriber Ids (both active and suspended subscribers) on the given billingAccountNumber where the subscriber has a SOC with a SOC group belonging to the specified familyType</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="billingAccountNumber" type="common:AccountNumber"/>
				<xsd:element name="familyTypeCode" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>This code is used to further classify a Price Plan or Service.  i.e. 'U' = data dollar pooling price plans, 'Y' = business anywhere price plans/services, 'R' = RIM price plans</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="effectiveDate" type="xsd:date" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Date when subscribers have active priceplan/service in the given family type.  If null or not supplied, will use logical date.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberIdListByServiceGroupFamilyResponse">
		<xsd:annotation>
			<xsd:documentation>Returns a list of SubscriberIds</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriberIdList" type="common:SubscriberNumber" minOccurs="0" maxOccurs="1000"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberBySubscriberId">
		<xsd:annotation>
			<xsd:documentation>This operation returns a Subscriber given a subscriberId</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriberId" type="xsd:string"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getSubscriberBySubscriberIdResponse">
		<xsd:annotation>
			<xsd:documentation>The Subscriber object type</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="subscriber" type="sit:Subscriber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
